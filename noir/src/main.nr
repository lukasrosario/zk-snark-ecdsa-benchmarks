fn main(
    hashed_message: [u8; 32],
    pub_key_x: [u8; 32],
    pub_key_y: [u8; 32],
    signature: [u8; 64],
) {
    let valid = std::ecdsa_secp256r1::verify_signature(
        pub_key_x,
        pub_key_y,
        signature,
        hashed_message
    );
    assert(valid);
}

#[test]
fn test_main() {

    let hashed_message = [
    100,
    236,
    136,
    202,
    0,
    178,
    104,
    229,
    186,
    26,
    53,
    103,
    138,
    27,
    83,
    22,
    210,
    18,
    244,
    243,
    102,
    178,
    71,
    114,
    50,
    83,
    74,
    138,
    236,
    163,
    127,
    60
];
let pub_key_x = [
    215,
    20,
    197,
    183,
    251,
    132,
    86,
    169,
    255,
    35,
    86,
    246,
    21,
    222,
    34,
    92,
    191,
    172,
    191,
    161,
    163,
    204,
    36,
    141,
    30,
    29,
    25,
    62,
    11,
    51,
    249,
    10
];
let pub_key_y = [
    168,
    82,
    177,
    82,
    238,
    60,
    44,
    214,
    26,
    171,
    18,
    163,
    238,
    117,
    229,
    146,
    78,
    143,
    166,
    14,
    19,
    140,
    148,
    150,
    78,
    74,
    187,
    247,
    188,
    108,
    16,
    151
];
let signature = [
    127,
    89,
    255,
    223,
    175,
    164,
    106,
    54,
    212,
    50,
    103,
    134,
    196,
    138,
    182,
    252,
    207,
    53,
    182,
    122,
    56,
    45,
    35,
    165,
    253,
    190,
    89,
    87,
    151,
    166,
    196,
    220,
    85,
    145,
    63,
    125,
    102,
    212,
    232,
    12,
    87,
    133,
    182,
    194,
    17,
    160,
    16,
    121,
    4,
    91,
    130,
    131,
    237,
    27,
    153,
    31,
    239,
    157,
    150,
    146,
    25,
    43,
    147,
    178
];


    main(hashed_message, pub_key_x, pub_key_y, signature);
}
